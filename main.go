// Code generated by hertz generator.

package main

import (
	"cex-hertz/biz/service"
	cexserver "cex-hertz/server"
	"context"
	"github.com/cloudwego/hertz/pkg/app/server"
	"os"
	"os/signal"
	"syscall"
)

func main() {
	h := server.Default()
	wsServer := cexserver.NewWebSocketServer(":8081")

	defer h.Shutdown(context.Background())
	defer wsServer.Shutdown(context.Background())

	// 初始化 Postgres 连接池（使用默认连接串）
	err := service.InitPostgresPool("postgres://postgres:postgres@localhost:5432/postgres")
	if err != nil {
		panic(err)
	}

	// 初始化 Kafka Writer
	brokers := []string{"localhost:9092"}
	topic := "trades"
	if envBrokers := os.Getenv("KAFKA_BROKERS"); envBrokers != "" {
		brokers = []string{envBrokers}
	}
	if envTopic := os.Getenv("KAFKA_TOPIC"); envTopic != "" {
		topic = envTopic
	}
	service.InitKafkaWriter(brokers, topic)

	go func() {
		register(h)
		h.Spin()
	}()

	go func() {
		wsServer.Spin()
	}()

	// 优雅关闭，监听 SIGINT/SIGTERM
	quit := make(chan os.Signal, 1)
	signal.Notify(quit, syscall.SIGINT, syscall.SIGTERM)
	<-quit
	// 此处可加服务关闭逻辑
}
